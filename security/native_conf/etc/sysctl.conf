# sysctl settings are defined through files in
# /usr/lib/sysctl.d/, /run/sysctl.d/, and /etc/sysctl.d/.
#
# Vendors settings live in /usr/lib/sysctl.d/.
# To override a whole file, create a new file with the same in
# /etc/sysctl.d/ and put new settings there. To override
# only specific settings, add a file with a lexically later
# name in /etc/sysctl.d/ and put new settings there.
#
# For more information, see sysctl.conf(5) and sysctl.d(5).
#
#Ignore ICMP request:
net.ipv4.icmp_echo_ignore_all = 1
#Ignore Broadcast request:
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Controls IP packet forwarding
net.ipv4.ip_forward = 0

# Don not accept source routing
net.ipv4.conf.default.accept_source_route = 0

# Controls kernel system request debugging functionality
kernel.sysrq = 0

# Controls whether core dumps will append the PID to the main filename, useful for debugging multithreaded applications
kernel.core_uses_pid = 1

# Controls the use of TCP syncookies
# Enable SYN-flood protection
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_synack_retries = 5

# Send redirects, if router, only for server (no routing allowed)
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Deny packets with SRR option
net.ipv4.conf.all.accept_source_route = 0

# Accept redirects? only for server (no routing)
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0

# Log packets with impossible addresses in kernel log
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# Ignore all ICMP ECHO and TIMESTAMP requests via broadcast/multicast
net.ipv4.icmp_echo_ignore_broadcasts = 1
# Prevent against common 'syn flood attacks'
net.ipv4.tcp_syncookies = 1

# Enable reverse path source validation, as specified in RFC1812
net.ipv4.conf.all.rp_filter = 1

# Control source route verification
net.ipv4.conf.default.rp_filter = 1

########### Hardening IPv6 ##############
# Number of Router solicitations to send until assuming no router is present
# This is the host not the router
net.ipv6.conf.default.router_solicitations = 0

# Accept router preferences in RA?
net.ipv6.conf.default.accept_ra_rtr_pref = 0

# Learn prefix information in router advertisement
net.ipv6.conf.default.accept_ra_pinfo = 0

# Setting defines whether the system accepts hop limit settings from a router advertisement
net.ipv6.conf.default.accept_ra_defrtr = 0

# Router advertisements can cause the system to assign a global unicast address to an interface
net.ipv6.conf.default.autoconf = 0

# Number of neighboor solicitations to send per adress ?
net.ipv6.conf.default.dad_transmits = 0

# How many global unicast IPV6 addresses can be assigned to each interface ?
net.ipv6.conf.default.max_addresses = 1

#Hardening TCP

#Enable ExecShield protection
#Set to 1 or 2
# kernel.exec-shield = 2
# kernel.randomize_va_space = 2

# TCP and memory optimization
# increasing maximum configurable TCP buffer size using setsockopt()
# net.ipv4.tcp_rmem = 4096 87380 8388608
# net.ipv4.tcp_wmem = 4096 87380 8388608

# increase linux auto-tuning of tcp buffer limits
# net.core.rmem_max = 8388608
# net.core.wmem_max = 8388608
# net.core.netdev_max_backlog = 5000
# net.ipv4.tcp_window_scaling = 1

# increase system file descriptor limit
fs.file-max = 65535

#increase system IP port limits
net.ipv4.ip_local_port_range = 2000 65000

#Fix RFC 1337
net.ipv4.tcp_rfc1337 = 1

#Reboot machine after kernel panic
kernel.panic=10

#mmap base, stack and VDSO page addresses are randomized
kernel.randomize_va_space = 2

#Ignore ICMP errors
net.ipv4.icmp_ignore_bogus_error_responses = 1

#Protects against symbolic/hard link attack under certain conditions
fs.protected_hardlinks = 1
fs.protected_symlinks = 1

